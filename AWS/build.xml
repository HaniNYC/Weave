<project name="AWS" basedir="." default="all">

    <property environment="env"/>
    <property file="${netbeans.user}/build.properties" />
    <property name="workspace_loc" value="${var.workspace_loc}"/>
	<property file="${workspace_loc}/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs"/>

	<!--<property name="docroot" value="/Library/Tomcat/webapps/ROOT" />-->
	<property name="docroot" value="${pathvariable.WEAVE_DOCROOT}" />
	<property name="build-dir" value="${basedir}/build" />
	<property name="dist-dir" value="${docroot}/aws"/>
	<property name="src-dir" value="${basedir}/src"/>
	<property name="app-dir" value="${basedir}/app"/>

	<taskdef name="jscomp" classpath="${basedir}/lib/compiler.jar" classname="com.google.javascript.jscomp.ant.CompileTask"/>

	<target name="all" depends="clean, compile, app, dist">
	</target>
	<target name="simple" depends="partialclean, app, dist"></target>
	<target name="clean">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${build-dir}" includes="**/*"/>
		</delete>
	</target>
    
    <target name="partialclean">
      <delete quiet="true" includeemptydirs="true">
        <fileset dir="${build-dir}">
          <include name="**/*" />
          <exclude name="aws/*" />
          <exclude name="goog/*" />
          <exclude name="aws-source-map.json" />
          <exclude name="aws.js" />
        </fileset> 
      </delete>
    </target>

	<target name="compile">
		<!--
			Using the <path> element allows us to specify wildcards for the jscomp command.
			http://stackoverflow.com/questions/14164325/use-wildcards-in-a-google-closure-compiler-ant-build
			http://stackoverflow.com/a/11798110
		-->
		<pathconvert property="aws.js.files" pathsep="," dirsep="/">
			<path>
				<fileset dir="${src-dir}/aws">
					<include name="**/*.js" />
				</fileset>
			</path>
		    <map from="${src-dir}/" to=""/>
		</pathconvert>

		<echo>${aws.js.files}</echo>

		<!-- jscomp: google closure compiler command -->
		<jscomp
		    	compilationLevel="simple"
		    	warning="verbose" 
		        debug="true"
		        prettyPrint="true"
		        sourceMapOutputFile="${build-dir}/aws-source-map.json"
		        sourceMapFormat="V3"
		        output="${build-dir}/aws.js">

			<externs dir="${basedir}/externs">
				<file name="jquery-1.9.js"/>
				<file name="myexterns.js"/>
				<file name="WeavePathExterns.js"/>
			</externs>

<!-- 			<path refid="${test.dir}"/> -->

			<sources dir="${src-dir}" files="${aws.js.files}" />

			<sources dir="${src-dir}">
			    <file name="goog/base.js"/>
			</sources>

<!-- 			<sources dir="${basedir}/src"> -->
<!-- 				<file name="aws/commons.js"/> -->
<!-- 				<file name="aws/DataClient.js"/> -->
<!-- 			</sources> -->

		</jscomp>

		<!-- TEMPORARY SOLUTION - copy all files to build folder -->
		<copy todir="${build-dir}">
			<fileset dir="${src-dir}"/>
		</copy>
<!-- 		<copy todir="${build-dir}" file="${src-dir}/test.html"/> -->

	</target>

	<target name="app">
		<!-- TEMPORARY SOLUTION - copy all files to build folder -->
		<copy todir="${build-dir}">
			<fileset dir="${app-dir}"/>
		</copy>
	</target>
	<target name="rscripts">
      <property name="scriptfolder" value="${dist-dir}/../../aws-config/RScripts"/>
      <delete quiet="false" includeemptydirs="true">
        <fileset dir="${scriptfolder}"/>
      </delete>
      <copy todir="${scriptfolder}">
        <fileset dir="${basedir}/RScripts"/>
      </copy>
    </target>
	<target name="dist" >
		<echo message="Dist-Build ${ant.project.name} ... ${dist-dir}"/>
		<tstamp>
		    <format property="current.time" pattern="MM/dd/yyyy hh:mm:ss aa" />
		</tstamp>
		<echo message="${current.time}" />
		<mkdir dir="${dist-dir}"/>
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${dist-dir}" />
		</delete>
		<copy todir="${dist-dir}">
			<fileset dir="${build-dir}"/>
		</copy>
	 </target>

	<macrodef name="compile-soy">
		<attribute name="file"/>
		<sequential>

			<java jar="${basedir}/lib/SoyToJsSrcCompiler.jar" fork="true" failonerror="true">
		    	<arg value="--outputPathFormat"/>
		    	<arg value="${basedir}/generated/{file}.js"/>
		    	<arg value="--srcs"/>
		    	<arg value="${src-dir}/{file}.soy"/>
			</java>
		</sequential>
	</macrodef>
	<!-- <compile-soy file="mytemplate.soy"/> -->
    
</project>